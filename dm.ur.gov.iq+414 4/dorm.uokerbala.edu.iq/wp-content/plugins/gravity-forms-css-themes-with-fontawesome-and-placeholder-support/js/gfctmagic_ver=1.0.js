var $j = jQuery.noConflict();// $j is now an alias to the jQuery function; creating the new alias is optional.$j(document).ready(function () {    $j(document).bind('gform_post_render', function () {        //start checkbox functions, let's start by storing and removing label text        $j('.gfct_slidecheck .gfield_checkbox label').each(function () {            labeltext = $j(this).text();            $j(this).text('');            $j(this).parent().children().wrapAll('<div class="gfct_slidecheck_container"></div>');            $j(this).parent().after('<span class="gfct_slidecheck_label">' + labeltext + '</span>');        });        //grab each field that adds code for fontawesome gfct_add        $j(".gfct_add").each(function () {            var faclass = $j(this).attr('class');            var startme = faclass.indexOf("gfct_add") + 14;            var finishme = faclass.indexOf("gfct_end") - 1;            var faicon = faclass.slice(startme, finishme);            console.log(faicon);            //ad our fontawesome            $j(this).find(".ginput_container input").before("<span class='gfct_fa_span'><i class='fa " + faicon + "'></i></span>");            $j(this).find(".ginput_container select").before("<span class='gfct_fa_span'><i class='fa " + faicon + "'></i></span>");            $j(this).find(".ginput_container textarea").before("<span class='gfct_fa_span'><i class='fa " + faicon + "'></i></span>");            //add for each complex field            //$j(this).find(".ginput_container span").prepend("<span class='gfct_fa_span'><i class='fa " + faicon + "'></i></span>");            $j(this).find(".ginput_container input").addClass('gfct-uses-fa');            $j(this).find(".ginput_container textarea").addClass('gfct-uses-fa');            $j(this).find(".ginput_container select").addClass('gfct-uses-fa');        });        ///labels        // gravity forms custom placeholders        $j(".gfct_placeholder li.gfield .gfield_label").each(function () {            //first, let's get the placeholder value            var label = $j(this).text();            //next, let's find some input fields, and add placeholder labe, add custom css and remove label            if ($j(this).siblings('.ginput_container').children('input[type="text"]').length) {                $j(this).siblings('.ginput_container').children('input[type="text"]').addClass('gfct_placeholder_active').attr("placeholder", label);                $j(this).hide();                //console.log(label);            }            // let select field know it will use placeholder            if ($j(this).siblings('.ginput_container').children('select').length) {                $j(this).siblings('.ginput_container').children('select').addClass('gfct_placeholder_active');                $j(this).hide();                //console.log(label);            }            //do the same with textarea            if ($j(this).siblings('.ginput_container').children('textarea').length) {                $j(this).siblings('.ginput_container').children('textarea').addClass('gfct_placeholder_active').attr("placeholder", label);                $j(this).hide();                //console.log(label);            }            //and do custom magic with the complex field            if ($j(this).siblings('.ginput_complex').length) {                //console.log('exist' + label);                //first, lets hide the input                $j(this).hide();                //adnd lets loop the small labels                $j(this).siblings('.ginput_complex').addClass('gfct_placeholder_active').find('label').each(function () {                    //$j(this).siblings('.ginput_container').find('label').text();                    //get the value of complex label and add them                    complex = $j(this).text();                    twolabels = label + ': ' + complex;                    //add class and placeholder attribute                    $j(this).siblings('input').addClass('gfct_placeholder_active').attr("placeholder", twolabels);                    $j(this).hide();                });            }            ;        });    });});