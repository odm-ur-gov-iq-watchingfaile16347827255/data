name: 🔍 Security Scan / فحص الأمان

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run weekly security scan / تشغيل فحص أمني أسبوعي
    - cron: '0 2 * * 1'  # Every Monday at 2 AM UTC

jobs:
  security-scan:
    name: 🛡️ Security Scanning / فحص الأمان
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code / تحميل الكود
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for better secret detection
        
    - name: 🐍 Set up Python / إعداد Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
        
    - name: 📦 Install dependencies / تثبيت التبعيات
      run: |
        python -m pip install --upgrade pip
        pip install detect-secrets
        pip install truffleHog
        
    - name: 🔍 Scan for secrets with detect-secrets / فحص الأسرار باستخدام detect-secrets
      run: |
        echo "🔍 بدء فحص الأسرار..."
        echo "🔍 Starting secret scan..."
        
        # Create baseline if it doesn't exist / إنشاء baseline إذا لم يكن موجوداً
        if [ ! -f .secrets.baseline ]; then
          detect-secrets scan --baseline .secrets.baseline
        fi
        
        # Scan for new secrets / فحص الأسرار الجديدة
        detect-secrets scan --baseline .secrets.baseline --exclude-files analysis/
        
        # Audit results / مراجعة النتائج
        detect-secrets audit .secrets.baseline
        
    - name: 🚨 Check for exposed AWS credentials / فحص بيانات AWS المكشوفة
      run: |
        echo "🚨 فحص بيانات اعتماد AWS..."
        echo "🚨 Checking for AWS credentials..."
        
        # Check for AWS Access Key IDs / فحص معرفات مفاتيح AWS
        if grep -r "AKIA[0-9A-Z]\{16\}" . --exclude-dir=.git --exclude="*.log" --exclude-dir=analysis; then
          echo "❌ تم اكتشاف مفاتيح AWS مكشوفة!"
          echo "❌ Exposed AWS keys detected!"
          exit 1
        fi
        
        # Check for AWS Secret Access Keys / فحص مفاتيح AWS السرية
        if grep -r "[0-9a-zA-Z/+]\{40\}" . --exclude-dir=.git --exclude="*.log" --exclude-dir=analysis | grep -E "(aws_secret_access_key|AWS_SECRET_ACCESS_KEY)"; then
          echo "❌ تم اكتشاف مفاتيح AWS سرية مكشوفة!"
          echo "❌ Exposed AWS secret keys detected!"
          exit 1
        fi
        
        echo "✅ لم يتم اكتشاف مفاتيح AWS مكشوفة"
        echo "✅ No exposed AWS keys detected"
        
    - name: 🔐 Check for other sensitive patterns / فحص أنماط حساسة أخرى
      run: |
        echo "🔐 فحص أنماط حساسة أخرى..."
        echo "🔐 Checking for other sensitive patterns..."
        
        # GitHub tokens / رموز GitHub
        if grep -r "ghp_[a-zA-Z0-9]\{36\}" . --exclude-dir=.git --exclude="*.log" --exclude-dir=analysis; then
          echo "❌ تم اكتشاف رموز GitHub مكشوفة!"
          echo "❌ Exposed GitHub tokens detected!"
          exit 1
        fi
        
        # Google API keys / مفاتيح Google API
        if grep -r "AIza[0-9A-Za-z_-]\{35\}" . --exclude-dir=.git --exclude="*.log" --exclude-dir=analysis; then
          echo "❌ تم اكتشاف مفاتيح Google API مكشوفة!"
          echo "❌ Exposed Google API keys detected!"
          exit 1
        fi
        
        # Private keys / المفاتيح الخاصة
        if grep -r "-----BEGIN.*PRIVATE KEY-----" . --exclude-dir=.git --exclude="*.log" --exclude-dir=analysis; then
          echo "❌ تم اكتشاف مفاتيح خاصة مكشوفة!"
          echo "❌ Exposed private keys detected!"
          exit 1
        fi
        
        echo "✅ لم يتم اكتشاف أنماط حساسة أخرى"
        echo "✅ No other sensitive patterns detected"
        
    - name: 📊 Check file sizes / فحص أحجام الملفات
      run: |
        echo "📊 فحص أحجام الملفات..."
        echo "📊 Checking file sizes..."
        
        # Find files larger than 5MB / البحث عن ملفات أكبر من 5MB
        large_files=$(find . -type f -size +5M -not -path "./.git/*" -not -path "./analysis/*")
        
        if [ -n "$large_files" ]; then
          echo "⚠️ تم العثور على ملفات كبيرة:"
          echo "⚠️ Large files found:"
          echo "$large_files"
          
          # Check if they're tracked by Git LFS / التحقق من تتبعها بواسطة Git LFS
          for file in $large_files; do
            if ! git lfs ls-files | grep -q "$file"; then
              echo "❌ الملف $file كبير وليس في Git LFS!"
              echo "❌ File $file is large but not in Git LFS!"
              exit 1
            fi
          done
        fi
        
        echo "✅ جميع الملفات الكبيرة في Git LFS"
        echo "✅ All large files are in Git LFS"
        
    - name: 🧹 Check filename safety / فحص أمان أسماء الملفات
      run: |
        echo "🧹 فحص أمان أسماء الملفات..."
        echo "🧹 Checking filename safety..."
        
        # Check for unsafe characters in filenames / فحص الرموز غير الآمنة في أسماء الملفات
        unsafe_files=$(find . -name "*[[:space:]]*" -o -name "*+*" -o -name "*=*" -o -name "*?*" -o -name "*#*" -o -name "*%*" -o -name "*&*" | grep -v ".git" | grep -v "analysis" || true)
        
        if [ -n "$unsafe_files" ]; then
          echo "⚠️ تم العثور على ملفات بأسماء غير آمنة:"
          echo "⚠️ Files with unsafe names found:"
          echo "$unsafe_files"
          echo "💡 يُنصح بإعادة تسمية هذه الملفات"
          echo "💡 Consider renaming these files"
        else
          echo "✅ جميع أسماء الملفات آمنة"
          echo "✅ All filenames are safe"
        fi
        
    - name: 📝 Generate security report / إنشاء تقرير الأمان
      if: always()
      run: |
        echo "📝 إنشاء تقرير الأمان..."
        echo "📝 Generating security report..."
        
        cat > security-report.md << 'EOF'
        # Security Scan Report / تقرير فحص الأمان
        
        **Date/التاريخ:** $(date)
        **Repository/المستودع:** ${{ github.repository }}
        **Branch/الفرع:** ${{ github.ref_name }}
        
        ## Summary / الملخص
        
        - ✅ Secret scan completed / تم إكمال فحص الأسرار
        - ✅ File size check completed / تم إكمال فحص أحجام الملفات  
        - ✅ Filename safety check completed / تم إكمال فحص أمان أسماء الملفات
        
        ## Recommendations / التوصيات
        
        1. Regularly rotate sensitive credentials / تدوير بيانات الاعتماد الحساسة بانتظام
        2. Use Git LFS for files > 5MB / استخدام Git LFS للملفات أكبر من 5MB
        3. Avoid special characters in filenames / تجنب الرموز الخاصة في أسماء الملفات
        
        EOF
        
    - name: 📤 Upload security report / رفع تقرير الأمان
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: security-report
        path: security-report.md
        retention-days: 30

  notify-on-failure:
    name: 🚨 Notify on Security Issues / إشعار عند وجود مشاكل أمنية
    runs-on: ubuntu-latest
    needs: security-scan
    if: failure()
    
    steps:
    - name: 🚨 Security Alert / تنبيه أمني
      run: |
        echo "🚨 تم اكتشاف مشاكل أمنية في المستودع!"
        echo "🚨 Security issues detected in repository!"
        echo "يرجى مراجعة سجلات الفحص واتخاذ الإجراءات المناسبة"
        echo "Please review scan logs and take appropriate action"